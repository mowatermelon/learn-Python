# 3.1.1. 数字

# 解释器的表示就像一个简单的计算器：可以向其录入一些表达式，它会给出返回值。
# 表达式语法很直白：运算符 +， -， * 和 / 与其它语言一样（例如：Pascal 或 C）；括号用于分组


print('--------- test 1')
print('1+1 = ',1+1)  # 2

print('--------- test 2')
print('(50-5*6)/4 = ',(50-5*6)/4)  # 5.0

print('--------- test 3')
print('8/5 = ',8/5)  # 1.6

#注意：有时你可能会得到不同的结果；浮点数在不同机器上的运算结果可能是不同的。
# 后面我们将对控制浮点数输出的显示结果做更多说明；这里我们看到的仅是有效的显示，并非我们能得到的可读性更好的结果。

# 对整数做除法运算并想去除小数部分取得整数结果时，可以使用另外一个运算符，//:
print('--------- test 4')
print('8//5 = ',8//5)  # 1
print('8//-5 = ',8//-5)  # -2


# 等号（ ' = ' ）用于给变量赋值:
print('--------- test 5')
width  =  20
height  =  5*9
print('width * height = ',width * height)  # 900

# 一个值可以同时赋给几个变量:
print('--------- test 6')
width  =  height  =  20
print('width * height = ',width * height)  # 400

# 变量在使用前必须“定义”（赋值），否则会出错:
# xxxx is not defined

# 浮点数有完整的支持；与整型混合计算时会自动转为浮点数:
print('--------- test 7')
print('3 * 3.75 / 1.5 = ',3 * 3.75 / 1.5)  # 7.5

print('7.0 / 2 = ',7.0 / 2)  # 3.5


print('--------- test 8')
d_1 = '7'
d_1 = d_1 + '0'
d_1 = int(d_1)+3
print(float(d_1))

